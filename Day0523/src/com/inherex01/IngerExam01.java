package com.inherex01;
class A_class{
	
	public A_class(int n) {
	}

	public A_class() {
	}
	
}

class B_class extends A_class{
	
	public B_class() {
		super();
	}

	
}

/*
 * 상위 클래스					하위클래스
 * 인수가 없는 생성자 정의 / 생성자 정의 않함
 								/인수가 있는 생성자*

 								 
 */
public class IngerExam01 {

	/*
	 * super
	 * -static으로 선언되지 않은 메소드에서 사용되며,
	 * 현재 클래스가 상속받은 하위클래스의 객체를 가리킨다.
	 * 
	 * super는 상위 클래스의 생성자를 호출하거나
	 * 상위클래스의 멤버변수 또는 메소드를 호출할때 사용할 수 있다.
	 * 
	 * 하위클래스는 생성자에서 상위 클래스의 생성자를 호출할때에는 
	 * 하위 클래스의 생성자 정의 구문에서 맨 처음에만 위치 할 수 있다.
	 * 
	 * 생성자와 클래스의 상속간의 관계
	 * 
	 * 
	 * 하위클래스는 상위클래스 멤버를 상속 받지만
	 * 생성자는 상속되지 않는다.
	 * 
	 * 하위클래스의 생성자를 호출할 때 
	 * 자동적으로 상위클래스의 생성자가 호출된다.
	 * 이때, 상위 클래스의 생성자는 인수가 없는 생성자가 호출됨
	 * 
	 * 상위클래스 및 하위클래스를 작성할때, 생성자를 작성하지 않거나
	 * 인수가 없는 생성자만을 작성한 경우
	 * 명시적으로 하위 클래스에서 상위 클래스의 생성자를 호출하지 않아도
	 * 아무런 문제가 발생하지 않지만, 
	 * 상위 클래스에 파라미터가 있는 생성자만 존재하는 경우는 문제가 발생될 수 있다.
	 * 
	 * 
	 * 
	 * */
	
}
